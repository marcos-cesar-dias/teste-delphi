unit TestUFuncionario;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, System.Generics.Collections, UDependente, UFuncionario;

type
  // Test methods for class TFuncionario

  TestTFuncionario = class(TTestCase)
  strict private
    FFuncionario: TFuncionario;
    FDependente1: TDependente;
    FDependente2: TDependente;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestValorINSS_Zero;
    procedure TestValorIR_Zero;
    procedure TestValorINSS;
    procedure TestValorIR;

  end;

implementation

procedure TestTFuncionario.SetUp;
begin
  FFuncionario := TFuncionario.Create(1, 'Fulano', '13', 10000);

  FDependente1 := TDependente.Create(1,1, 'Siclano', true, false);
  FDependente2 := TDependente.Create(2,1, 'Beltrano', true, true);
  FFuncionario.AddDependente(FDependente1);
  FFuncionario.AddDependente(FDependente2);

end;

procedure TestTFuncionario.TearDown;
begin
  FFuncionario.Free;
  FFuncionario := nil;
end;

procedure TestTFuncionario.TestValorINSS;
var
  ReturnValue: Currency;
begin
  ReturnValue := FFuncionario.ValorINSS;
  assert(ReturnValue = 800, 'Valor de INSS esta incorreto');
end;

procedure TestTFuncionario.TestValorINSS_Zero;
var
  ReturnValue: Currency;
begin
  ReturnValue := FFuncionario.ValorINSS;

  assert(ReturnValue <> 0, 'Valor de INSS não deveria ser zero');

  // TODO: Validate method results
end;

procedure TestTFuncionario.TestValorIR;
var
  ReturnValue: Currency;
begin
  ReturnValue := FFuncionario.ValorIR;
  Assert(ReturnValue = 1470, 'Valor do Imposto de Renda esta incorreto');
  // TODO: Validate method results
end;

procedure TestTFuncionario.TestValorIR_Zero;
var
  ReturnValue: Currency;
begin
  ReturnValue := FFuncionario.ValorIR;
  Assert(ReturnValue <> 0, 'Valor do Imposto de Renda não deveria ser zero');
  // TODO: Validate method results
end;

initialization

// Register any test cases with the test runner
RegisterTest(TestTFuncionario.Suite);

end.
